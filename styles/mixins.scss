/*importing variables*/
@import 'variables';

/*Universal styling regardless of media query*/
@mixin universal {
    /*title styles*/
    h1 {
        text-align: center;
        border: $hborder;
        color: $black;
        background-color:$bgcolor;
    }

    h2 {
        text-align: center;
        font-family: $hfont;
        background-color: $gcol;
        border-radius: $border;
    }

    /*body styling and background image*/
    body {
        font-family:$bfont;
        color: $white;
        /*background image styling*/
        background-image: url("../images/backgroundimage.jpg");
        background-color: $brown;
        width:$width;
        height:$height;
        background-size:$imgsize;
    }

    /*logo image*/
    .logo {
        max-width: $lwidth;
        text-align: center;
        margin: auto;
    }

    /*General formatting for all images*/
    .img1, .img2, .img3 {
        max-width: $imgw1;
        margin: $imgm;
    }

    /*conditional; if my variable black is black, then the font of h1 will be cambria and font size will be 40px*/
    @if ($black ==rgb(0,0,0)) {
        h1 {
            font-family:Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
            font-size:40px;
        }
    }
}

/*mixin for the grid portion + media queries*/
@mixin thegrid {
    /*mobile media query*/
    @media screen and (max-width: $mobile) {
        .grid {
            display: grid;
            grid-template-columns: auto auto;
            background-color:$gcol;
            border:$gborder;
            color: $black;
        }

        .grid-item {
            background-color:$gicol;
            padding: $gpad;
            margin: $gmarg;
            text-align: center;
            border: $giborder;
        }

        ul {
            list-style-type: square;
            text-align: left;
        }

        .future, p {
            background-color: $gicol;
            color: $black;
            margin-top: $gmarg;
            margin-bottom: $gmarg;
        }

        .img4 {
            margin: auto;
            max-width: $imgw2;
            border:$g2border;
        }

        .grad {
            text-align: center;
        }
    }
    /*tablet media query*/
    @media screen and (min-width: $tablet) {
        .grid {
            display: grid;
            grid-template-columns: auto auto;
            background-color: $black;
            border:$g2border;
            color:black;
        }
        .grid-item {
            background-color:$gicol;
            padding: $gpad;
            text-align: center;
            border: $giborder;
        }

        .future, p {
            margin: $pmarg;
            background-color: $gicol;
            color: $black;
            padding: $parapad;
        }
        .img4 {
            margin: auto;
            max-width: $imgw2;
            border: $imgborder;
        }

        .grad {
            text-align: center;
        }
    }
    /*desktop media query*/
    @media screen and (min-width: $desktop) {
        .grid {
            display: grid;
            grid-template-columns: auto auto auto auto;
            border: $gborder;
            background-color: $gcol;
            color:$black;
            margin:$marg;
        }

        .grid-item {
            padding: $gpad;
            margin: $gmarg;
            background-color: $gicol;
            text-align: center;
        }

        /*positioning the grid items individually*/
        .one {
            grid-area:1/1/2/2;
        }
        .two {
            grid-area:1/2/2/3;
        }
        .three {
            grid-area:2/1/3/2;
        }
        .four {
            grid-area:2/2/3/3;
        }
        .five {
            grid-area:3/1/4/2;
        }
        .six {
            grid-area:3/2/4/3;
        }
        .seven {
            grid-area:1/3/2/4;
        }
        .eight {
            grid-area:1/4/2/5;
        }
        .nine {
            grid-area:2/3/3/4;
        }
        .ten {
            grid-area:2/4/3/5;
        }
        .eleven {
            grid-area:3/3/4/4;
        }
        .twelve {
            grid-area:3/4/4/5;
        }

        /*paragraph desktop styling*/
        .future, p {
            margin:$p2marg;
            padding:$parapad;
        }
    }
}